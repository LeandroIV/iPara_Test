rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Authenticated users can read their own data
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Driver locations
    match /driver_locations/{locationId} {
      allow read: if request.auth != null; // All authenticated users can see driver locations
      allow write: if request.auth != null && 
                    request.auth.uid == resource.data.userId && 
                    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "driver";
    }
    
    // Commuter locations - more restricted
    match /commuter_locations/{locationId} {
      allow read: if request.auth != null && 
                  (request.auth.uid == resource.data.userId || 
                   get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "driver");
      allow write: if request.auth != null && 
                    request.auth.uid == resource.data.userId;
    }
    
    // Routes are readable by all
    match /routes/{routeId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "operator";
    }
    
    // Trip management
    match /active_trips/{tripId} {
      allow read: if request.auth != null && 
                   (request.auth.uid == resource.data.driverId || 
                    request.auth.uid == resource.data.commuterId);
      allow create: if request.auth != null && 
                      request.auth.uid == request.resource.data.driverId;
      allow update: if request.auth != null && 
                     (request.auth.uid == resource.data.driverId || 
                      request.auth.uid == resource.data.commuterId);
    }
  }
} 